/ #fb-root
/ :javascript
/   (function(d, s, id) {
/     var js, fjs = d.getElementsByTagName(s)[0];
/     if (d.getElementById(id)) return;
/     js = d.createElement(s); js.id = id;
/     js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=1448378892074705&version=v2.0";
/     fjs.parentNode.insertBefore(js, fjs);
/   }(document, 'script', 'facebook-jssdk'));
.square_viewport
  .standard_group
    %ul{"data-clearing" => ""}
      %li
        %a{href: @picture.picture_image}
          .large_square
            #picture_square_show
              %img{src: @picture.picture_image.detail}/
              .like_button
                .like_button_picture
                  - if current_user.liked? @picture
                    = render :partial => 'picture_dislike'
                  - else
                    = render :partial => 'picture_like'

    - if @picture.any_exif?
      .more_info.long_short
        %button.button.tiny.expand#more_info_button View More Info

      #more_info_slider
        .long_short.text_square
          %p
            Camera Model: 
            %strong=@picture.camera_model
          %p
            Date and Time: 
            %strong= @picture.datetime
          %p
            Height: 
            %strong #{@picture.image_height} px
          %p
            Width: 
            %strong #{@picture.image_length} px
          %p
            Exposure Time: 
            %strong #{@picture.exposure}
          %p
            Latitude: 
            %strong #{@picture.latitude}
          %p
            Longitude: 
            %strong #{@picture.longitude}
        
        - if @picture.geocoded?
          %p Nearby Pictures 
          .long_short.side_scroll_pics
            = render @nearby_pictures

  .standard_group
    .standard_square.text_square
      %h3
        = @picture.name
        %br
        %small
          by #{@picture.user.user_name}
      .inner_text
        .like_count
          %span.badge= render :partial => 'likecount'
        %p Likes:
        %span.badge= @picture.comments.count
        %p Comments:
   
    .tiny_group
      %a{href: user_path(@picture.user)}
        .tiny_square
          %img{src: @picture.user.profile_pic.thumb}

      %a{"data-count" => "none", "data-text" => "Check out my new Immige", :href => "https://twitter.com/share"}
        .tiny_square.sprite-share
          / :javascript
          /   !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');

      %a{href: album_path(@picture.album)}
        .tiny_square.sprite-albums.has-tip{"data-tooltip" => "", "data-options" => "disable_for_touch:true", title: "Back to Album: #{@picture.album.name}"}

      - if @picture.album.user == current_user
        %a{href: edit_album_picture_path(@picture.album, @picture)}
          .tiny_square.sprite-edit.has-tip{"data-tooltip" => "", "data-options" => "disable_for_touch:true", title: "Edit"}
      - else
        - if @picture.flagged?
          .tiny_square.sprite-flagged.has-tip{"data-tooltip" => "", "data-options" => "disable_for_touch:true", title: "This picture has been flagged as innapropriate and is awaiting moderation."}
        -else
          = link_to inappropriate_album_picture_path(@album, @picture) do
            .tiny_square.sprite-flag.has-tip{"data-tooltip" => "", "data-options" => "disable_for_touch:true", title: "Flag this photo for moderation."}


    .long_short.tag_list
      = raw @picture.tag_list.map { |t| link_to t, tag_path(t), class: "tag" }.join(' ')
      
    .long_short
      = form_for([@album, @picture, @comment]) do |f|
        = f.text_area :comment, {placeholder: "Add a comment..."}
        = f.hidden_field :user_id, value: current_user.id
        = f.hidden_field :commentable_type, value: "Picture"
        = f.submit 'Add Comment', class: 'button tiny expand'

    = render @picture.comments[0...@picture.comments.count]
